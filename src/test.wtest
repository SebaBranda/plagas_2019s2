import barrios.*
import elementos.*
import plagas.*

test "testBarrios" {
	// Modelado de Barrios
	const vaCarinio = new Barrio()
	const vaChagarsa = new Barrio()
	
	//Modelado de elementos
	const casita = new Hogar()
	const casa = new Hogar()
	const caseron = new Hogar()
	const mansion = new Hogar()
	const ph1 = new Hogar()
	const ph2 = new Hogar()
	const loft = new Hogar()
	const huertita = new Huerta()
	const huertaza = new Huerta()
	const huerta = new Huerta()
	const firulais = new Mascota()
	const duke = new Mascota()
	const batuke = new Mascota()
	const lorito = new Mascota()
	const pescaditos = new Mascota()
	const huron = new Mascota()
	casita.nivelDeMugre(12)
	casita.confort(50)
	casa.nivelDeMugre(23)
	casa.confort(75)
	caseron.nivelDeMugre(32)
	caseron.confort(97)
	mansion.nivelDeMugre(750)
	mansion.confort(870)
	ph1.nivelDeMugre(10)
	ph1.confort(30)
	ph2.nivelDeMugre(10)
	ph2.confort(40)
	loft.nivelDeMugre(10)
	loft.confort(40)
	firulais.nivelDeSalud(480)
	duke.nivelDeSalud(480)
	batuke.nivelDeSalud(480)
	pescaditos.nivelDeSalud(500)
	lorito.nivelDeSalud(250)
	huron.nivelDeSalud(370)
		
	//testeo hasta aca
	assert.that(casa.esBueno())
	assert.that(casita.esBueno())
	assert.that(caseron.esBueno())
	assert.notThat(mansion.esBueno())
	assert.that(ph1.esBueno())
	assert.that(ph2.esBueno())
	assert.that(loft.esBueno())
	huertita.capacidadDeProduccion(53)
	huertaza.capacidadDeProduccion(300)
	huerta.capacidadDeProduccion(150)
	assert.notThat(huertita.esBueno())
	assert.that(huertaza.esBueno())
	assert.that(huerta.esBueno())
	assert.that(firulais.esBueno())
	assert.that(duke.esBueno())
	assert.that(batuke.esBueno())
	assert.that(pescaditos.esBueno())
	assert.notThat(lorito.esBueno())//recien lo sacaron de la caja en la que llego del viaje
	assert.that(huron.esBueno())
		
	//Seteo de barrios 
	vaCarinio.radicar(casita)
	vaCarinio.radicar(casa)
	vaCarinio.radicar(loft)
	vaChagarsa.radicar(mansion)
	vaChagarsa.radicar(ph1)
	vaChagarsa.radicar(ph2)
	vaChagarsa.radicar(caseron)
	vaCarinio.radicar(casa)
	vaCarinio.radicar(loft)
	vaChagarsa.radicar(huerta)
	vaCarinio.radicar(huertita)
	vaCarinio.radicar(huertaza)
	vaCarinio.radicar(batuke)
	vaChagarsa.radicar(pescaditos)
	vaChagarsa.radicar(lorito)
	vaChagarsa.radicar(duke)
	
	assert.that(vaChagarsa.esCopado())
	assert.that(vaCarinio.esCopado())
	
	//Modelado de plagas
	const cucas = new Cucarachas(poblacion = 40, pesoGrs = 8)
	const cucasVoladoras = new Cucarachas(poblacion = 200, pesoGrs = 4)
	const dengues = new Mosquitos(poblacion = 50, pesoGrs = 4)
	const rompebolas = new Mosquitos(poblacion = 70, pesoGrs = 4)
	const rompebolas2 = new Mosquitos(poblacion = 30, pesoGrs = 4)
	const pulgones = new Pulgas(poblacion = 32, pesoGrs = 4)
	const pulguitas = new Pulgas(poblacion = 40, pesoGrs = 4)
	const garras = new Garrapatas(poblacion = 20, pesoGrs = 4)
	assert.equals(20,cucas.nivelDeDanio())
	assert.equals(5, cucas.pesoPromedio())  
	assert.equals(100,cucasVoladoras.nivelDeDanio())
	assert.equals(50,dengues.nivelDeDanio())
	assert.equals(70,rompebolas.nivelDeDanio())
	assert.equals(30,rompebolas2.nivelDeDanio())
	assert.equals(64,pulgones.nivelDeDanio())
	assert.equals(80,pulguitas.nivelDeDanio())
	assert.equals(40,garras.nivelDeDanio())
	assert.notThat(cucas.transmiteEnfermedades())
	assert.that(cucasVoladoras.transmiteEnfermedades())
	assert.notThat(dengues.transmiteEnfermedades())
	assert.notThat(rompebolas.transmiteEnfermedades())
	assert.that(rompebolas2.transmiteEnfermedades())
	assert.that(pulgones.transmiteEnfermedades())
	assert.that(pulguitas.transmiteEnfermedades())
	assert.that(garras.transmiteEnfermedades())
	
	//La ecatombe
	vaCarinio.sufirAtaqueDe_(rompebolas)
	vaCarinio.sufirAtaqueDe_(pulgones)
	vaCarinio.sufirAtaqueDe_(cucas)
	vaChagarsa.sufirAtaqueDe_(cucasVoladoras)
	vaChagarsa.sufirAtaqueDe_(dengues)
	vaChagarsa.sufirAtaqueDe_(pulguitas)
	vaChagarsa.sufirAtaqueDe_(garras)
	vaChagarsa.sufirAtaqueDe_(rompebolas2)
	assert.notThat(vaChagarsa.esCopado())
	assert.notThat(vaCarinio.esCopado())
	assert.equals(2,vaCarinio.cantidadDeBuenos())
	assert.equals(0,vaChagarsa.cantidadDeBuenos())
	assert.equals(85.74355,cucas.poblacion())
}